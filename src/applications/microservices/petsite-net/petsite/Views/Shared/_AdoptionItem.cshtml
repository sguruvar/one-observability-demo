@using Microsoft.CodeAnalysis.CSharp.Syntax
@model Pet;

<div style="position: relative; display: inline-block;">
    <img class="pet-thumbnail" src="@Model.peturl"
         style="border: 1px solid #000000; border-radius: 23px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);"/>

    <!-- Pet type and color overlay - top left -->
    <span style="position: absolute; top: 8px; left: 8px; background: rgba(0,0,0,0.7); color: white; padding: 2px 6px; border-radius: 4px; font-size: 12px;">@Model.pettype-@Model.petcolor</span>

    <!-- Price overlay - bottom right -->
    <span style="position: absolute; bottom: 8px; right: 8px; background: rgba(0,0,0,0.7); color: white; padding: 2px 6px; border-radius: 4px; font-weight: bold; font-size: 18px;">$@Model.price</span>
</div>

<!-- <div class="pet-list-item" style="margin-top: 8px;">
    <span>Adoption Id: @Model.transactionid</span>
</div> -->
<div class="pet-list-item adoption-info" style="margin-top: 4px; padding: 6px; background: rgba(240, 248, 255, 0.8); border-radius: 4px;" data-adoption-date="@Model.adoptiondate">
    <span>Adopted by <strong style="color: #2c5aa0;">@(Model.adoptedby ?? "user12345")</strong> on <strong style="color: #2c5aa0;" class="adoption-date">Loading...</strong> at <strong style="color: #2c5aa0;" class="adoption-time">Loading...</strong></span>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const adoptionInfoElements = document.querySelectorAll('.adoption-info');
    
    adoptionInfoElements.forEach(function(element) {
        const adoptionDateStr = element.getAttribute('data-adoption-date');
        
        if (adoptionDateStr) {
            try {
                // Parse the ISO date string
                const adoptionDate = new Date(adoptionDateStr);
                
                // Format date in browser's timezone
                const dateOptions = { 
                    year: 'numeric', 
                    month: 'short', 
                    day: '2-digit'
                };
                const timeOptions = { 
                    hour: 'numeric', 
                    minute: '2-digit', 
                    hour12: true 
                };
                
                const formattedDate = adoptionDate.toLocaleDateString('en-US', dateOptions);
                const formattedTime = adoptionDate.toLocaleTimeString('en-US', timeOptions);
                
                // Update the display
                element.querySelector('.adoption-date').textContent = formattedDate;
                element.querySelector('.adoption-time').textContent = formattedTime;
            } catch (error) {
                // Handle invalid dates
                element.querySelector('.adoption-date').textContent = 'Invalid Date';
                element.querySelector('.adoption-time').textContent = 'Invalid Time';
            }
        } else {
            // Handle missing dates
            element.querySelector('.adoption-date').textContent = 'Unknown Date';
            element.querySelector('.adoption-time').textContent = 'Unknown Time';
        }
    });
});
</script>